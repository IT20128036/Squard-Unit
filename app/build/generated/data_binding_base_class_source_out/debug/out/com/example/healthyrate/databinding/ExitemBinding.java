// Generated by view binder compiler. Do not edit!
package com.example.healthyrate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.healthyrate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ExitemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDeletee;

  @NonNull
  public final Button btnEditt;

  @NonNull
  public final TextView txttdate;

  @NonNull
  public final TextView txttdes;

  @NonNull
  public final TextView txttfrom;

  @NonNull
  public final TextView txttto;

  private ExitemBinding(@NonNull CardView rootView, @NonNull Button btnDeletee,
      @NonNull Button btnEditt, @NonNull TextView txttdate, @NonNull TextView txttdes,
      @NonNull TextView txttfrom, @NonNull TextView txttto) {
    this.rootView = rootView;
    this.btnDeletee = btnDeletee;
    this.btnEditt = btnEditt;
    this.txttdate = txttdate;
    this.txttdes = txttdes;
    this.txttfrom = txttfrom;
    this.txttto = txttto;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ExitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ExitemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.exitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ExitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeletee;
      Button btnDeletee = rootView.findViewById(id);
      if (btnDeletee == null) {
        break missingId;
      }

      id = R.id.btnEditt;
      Button btnEditt = rootView.findViewById(id);
      if (btnEditt == null) {
        break missingId;
      }

      id = R.id.txttdate;
      TextView txttdate = rootView.findViewById(id);
      if (txttdate == null) {
        break missingId;
      }

      id = R.id.txttdes;
      TextView txttdes = rootView.findViewById(id);
      if (txttdes == null) {
        break missingId;
      }

      id = R.id.txttfrom;
      TextView txttfrom = rootView.findViewById(id);
      if (txttfrom == null) {
        break missingId;
      }

      id = R.id.txttto;
      TextView txttto = rootView.findViewById(id);
      if (txttto == null) {
        break missingId;
      }

      return new ExitemBinding((CardView) rootView, btnDeletee, btnEditt, txttdate, txttdes,
          txttfrom, txttto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
