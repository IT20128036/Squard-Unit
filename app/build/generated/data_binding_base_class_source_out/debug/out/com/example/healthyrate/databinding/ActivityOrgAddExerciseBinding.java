// Generated by view binder compiler. Do not edit!
package com.example.healthyrate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.healthyrate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOrgAddExerciseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final EditText txtdes;

  @NonNull
  public final TextView txtfrom;

  @NonNull
  public final TextView txtto;

  private ActivityOrgAddExerciseBinding(@NonNull LinearLayout rootView, @NonNull Button btnAdd,
      @NonNull Button btnBack, @NonNull TextView txtDate, @NonNull EditText txtdes,
      @NonNull TextView txtfrom, @NonNull TextView txtto) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnBack = btnBack;
    this.txtDate = txtDate;
    this.txtdes = txtdes;
    this.txtfrom = txtfrom;
    this.txtto = txtto;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOrgAddExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOrgAddExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_org_add_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOrgAddExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = rootView.findViewById(id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnBack;
      Button btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = rootView.findViewById(id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtdes;
      EditText txtdes = rootView.findViewById(id);
      if (txtdes == null) {
        break missingId;
      }

      id = R.id.txtfrom;
      TextView txtfrom = rootView.findViewById(id);
      if (txtfrom == null) {
        break missingId;
      }

      id = R.id.txtto;
      TextView txtto = rootView.findViewById(id);
      if (txtto == null) {
        break missingId;
      }

      return new ActivityOrgAddExerciseBinding((LinearLayout) rootView, btnAdd, btnBack, txtDate,
          txtdes, txtfrom, txtto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
